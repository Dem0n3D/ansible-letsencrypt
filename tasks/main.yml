---
  - apt: update_cache=yes cache_valid_time=3600
    become: yes
    when: ansible_pkg_mgr == "apt"
    tags: install

  - include_vars: "{{ item }}"
    with_first_found:
      - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version | int }}.yml"
      - "../vars/{{ ansible_distribution }}.yml"
      - "../vars/{{ ansible_os_family }}.yml"
      - "../vars/default.yml"
    when: virtualenv_package_name is not defined
    tags: install

  - name: Install depends
    package: name={{ item }} state=present
    become: yes
    with_items: "{{ letsencrypt_depends | default([]) }}"
    tags: install

  - name: Install virtualenv
    package: name={{ item }} state=present
    become: yes
    with_items: "{{ virtualenv_package_name | default([]) }}"
    tags: install

  - name: Install python depends
    pip:
      virtualenv: "{{ letsencrypt_venv }}"
      virtualenv_site_packages: no
      name: "{{ item }}"
      state: latest
      virtualenv_python: python2
    become: yes
    with_items:
      - setuptools
      - pip
      - letsencrypt
    tags: install

  - name: Ensure webroot exists
    file:
      path: "{{ letsencrypt_webroot_path }}"
      state: directory
      follow: yes
    become: yes

  - name: Attempt to get the certificate using the webroot authenticator ({{ letsencrypt_cert_domains[0] }})
    shell: "{{ letsencrypt_command }} -a webroot --webroot-path {{ letsencrypt_webroot_path }} certonly"
    become: yes
    args:
      creates: "/etc/letsencrypt/live/{{ letsencrypt_cert_domains[0] }}"
    when: letsencrypt_authenticator == "webroot"
    ignore_errors: True

  - name: Fix the renewal file
    ini_file:
      section: renewalparams
      option: "{{ item.key }}"
      value: "{{ item.value }}"
      dest: "/etc/letsencrypt/renewal/{{ letsencrypt_cert_domains[0] }}.conf"
    become: yes
    with_dict:
      os_packages_only: False
      verb: certonly
      noninteractive_mode: False
      uir: False
      hsts: False
      authenticator: '{{ letsencrypt_authenticator }}'

  - name: Fix the webroot map in the renewal file
    ini_file:
      section: "[webroot_map]"
      option: "{{ item }}"
      value: "{{ letsencrypt_webroot_path }}"
      dest: "/etc/letsencrypt/renewal/{{ letsencrypt_cert_domains[0] }}.conf"
    become: yes
    with_items: "{{ letsencrypt_cert_domains }}"

  - name: Install renewal cron
    become: yes
    copy:
      content: "letsencrypt renew --quiet {{ letsencrypt_renewal_command_args }}"
      dest: "/etc/cron.monthly/letsencrypt"
      mode: 770
      owner: root
      group: root

  - name: Generate Strong Diffie-Hellman Group
    command: "openssl dhparam -out /etc/letsencrypt/dhparam.pem 2048"
    args:
      creates: "/etc/letsencrypt/dhparam.pem"
